if #(game.Players:GetPlayers()) > 1 then
game:GetService'Players'.LocalPlayer:Kick("someone here")
end
game:GetService'Players'.PlayerAdded:Connect(function()
game:GetService'Players'.LocalPlayer:Kick("join")
end)
local vim = game:service'VirtualInputManager'
local peanut = 0
wait(1) do
vim:SendKeyEvent(true, "Five", false, game)
       wait(0)
       vim:SendKeyEvent(true, "F", false, game)
       wait(0)
       vim:SendKeyEvent(true, "Backquote", false, game)
end
wait(1)
local A_1 = "SummonChamp"
local A_2 = 9
local Event = game:GetService("ReplicatedStorage").RSPackage.Events.GeneralFunction
Event:InvokeServer(A_1, A_2)
local plr = game.Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local hum = char:WaitForChild("Humanoid")
local location1 = CFrame.new(2863, 3, 1037)
local location2 = CFrame.new(405, 351, -232)
local location3 = CFrame.new(163, 353, -293)
local location4 = CFrame.new(-20, 356, -289)
local location5 = CFrame.new(-151, 364, -307)
local location6 = CFrame.new(-222, 362, -199)
local location7 = CFrame.new(-195, 407, 210)
local location8 = CFrame.new(-250, 428, 486)
local location9 = CFrame.new(-285, 442, 770)
if hum and hrp and hum.Health > 0 then -- make sure everhing is present
if hum:GetState() ~= Enum.HumanoidStateType.Flying then -- set state IF needed aka if not already flying
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location1 -- teleport
end
wait(9) -- desired wait
-- same code, but new location
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location2
end
wait(11)
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location3
end
wait(11)
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location4
end
wait(11)
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location5
end
wait(11)
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location6
end
wait(11)
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location7
end
wait(11)
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location8
end
wait(11)
if hum and hrp and hum.Health > 0 then
if hum:GetState() ~= Enum.HumanoidStateType.Flying then
hum:ChangeState(Enum.HumanoidStateType.Flying)
end
hrp.CFrame = location9
end
-- copy/paste a step and change position and wait time
hum.Died:Connect(function()
script:Destroy()
end)
